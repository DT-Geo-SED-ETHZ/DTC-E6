# Define a list of core modules loaded at startup.
core.plugins = dbpostgresql

# The default set of message groups for each queue. Only used if a queues group
# list is unset (note: empty is not unset).
defaultGroups = AMPLITUDE,\
   PICK,\
   LOCATION,\
   MAGNITUDE,\
   FOCMECH,\
   EVENT,\
   QC,\
   PUBLICATION,\
   GUI,\
   INVENTORY,\
   ROUTING,\
   CONFIG,\
   LOGGING,\
   IMPORT_GROUP,\
   SERVICE_REQUEST,\
   SERVICE_PROVIDE

# List of plugins required by this queue. This is just a convenience parameter
# to improve configurations readability. The plugins can also be added to the
# global list of module plugins.
# Example: dbstore
queues.production.plugins = dbstore

# Interface name. For now, use "dbstore"to use a database.
# Use empty for testing or playbacks without a database.
queues.production.processors.messages = dbstore

# Selected the database driver to use. Database drivers are available through
# plugins. The default plugin is dbmysql which supports the MYSQL database
# server. It is activated with the core.plugins parameter.
queues.production.processors.messages.dbstore.driver = postgresql

# Set the database read connection which is reported to clients that connect to
# this server. If a remote setup should be implemented, ensure that the
# hostname is reachable from the remote computer.
queues.production.processors.messages.dbstore.read = seiscomp:aoz54dtgeosf@localhost:5432/scdtgeosf?column_prefix=m_

# Set the database write connection which is private to scmaster. A separate
# write connection enables different permissions on the database level for
# scmaster and clients.
queues.production.processors.messages.dbstore.write = seiscomp:aoz54dtgeosf@localhost:5432/scdtgeosf?column_prefix=m_

# If enabled, the plugin will check the database schema version and refuse to
# start if the version doesn't match the latest version. If disabled and the an
# object needs to be stored, which is incompatible with the database schema,
# this object is lost. Leave this option enabled unless you know exactly what
# are you doing and what the consequences are.
queues.production.processors.messages.dbstore.strictVersionMatch = false

# Define the list of message groups added to the queue. If unset then the
# defaultGroups will be used. A queue will always add the default group
# "STATUS_GROUP". This parameter overrides defaultGroups.
queues.production.groups = ${defaultGroups},\
                           ENVELOPE_VS,\
                           LOCATION_VS,\
                           MAGNITUDE_VS,\
                           LOCATION_FD,\
                           LOCATION_FD_TESTOUT,\
                           MAGNITUDE_FD, \
                           STRONGMOTION

# Agency ID used to set creationInfo.agencyID in data model objects. Should not
# contain spaces.
agencyID = SED

# Datacenter ID which is primarily used by Arclink and its tools. Should not
# contain spaces.
datacenterID = SED

# Organization name used mainly by ArcLink and SeedLink.
organization = "Swiss Seismological Service"

# List of plugins loaded at startup. Separate multiple names by comma. Add
# ${plugins} to consider all previously read values.
plugins = ${plugins}, dmsm, dmvs, dbpostgresql, mbtiles

# Define a custom pattern for generation of public object IDs. The following
# variables are resolved: @classname@ (class name of object), @id@ (public
# object count), @globalid@ (general object count), @time@ (current time, use
# '/' to supply custom format e.g. @time/%FT%T.%fZ@
publicIDPattern = "smi:ch.ethz.sed/@hostname@/@classname@/@time/%Y%m%d%H%M%S.%f@.@id@"

# Define the database connection. If no database is configured (which is the
# default) and a messaging connection is available, the application will
# receive the parameters after the connection is established. Override these
# values only if you know what you are doing.
# The format is: service://user:pwd@host/database. "service" is the name of the
# database driver which can be queried with "--db-driver-list". IMPORTANT: This
# parameter replaces former "database.type" and "database.parameters" which
# have been removed.
database = postgresql://seiscomp:aoz54dtgeosf@localhost:5432/scdtgeosf?column_prefix=m_

# SeisComP applications access waveform data through the RecordStream
# interface. Read the SeisComP documentation for a list of supported services
# and their configuration.
# This parameter configures RecordStream source URL.
# Format: [service://]location[#type]
# "service": The name of the RecordStream implementation. If not given,
# "file://" is implied.
# IMPORTANT: This parameter replaces former RecordStream configurations in
# "recordstream.service" and "recordstream.source" which have been removed.
# recordstream = routing://slink/dt-geo-seedlink.ethz.ch:18000??match=(IV|MN).*.*.*;slink/seedlink.ethz.ch:18000??match=*.*.*.*
recordstream = slink://localhost:18000

# Set the logging level between 1 and 4 where 1=ERROR, 2=WARNING, 3=INFO and
# 4=DEBUG.
logging.level = 4

# Define a list of core modules loaded at startup.
core.plugins = dbpostgresql

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*"

# PublicID creation pattern for an origin created by NonLinLoc.
NonLinLoc.publicID = "smi:ch.ethz.sed/@hostname@/@classname@/NLL.@time/%Y%m%d%H%M%S.%f@.@id@"

# The location and the structure of the map tiles to be used. This path is
# composed of zero or more directives and must include at least one conversion
# specification. The specification starts with the '%' and is followed by a
# conversion specifier. Valid specifiers are
# s: to be replaced by tile ID
# l: tile level
# c: tile column
# r: tile row.
# Example for using the OpenStreetMap file structure:
# /path/to/maps/%l/%c/%r.png.
map.location = https://tile.osm.ch/switzerland/%l/%c/%r.png

# Projection of the map tiles configured in 'map.location'. Note: Additional
# projections may be available by plugins.
map.format = mercator

# The tile store implementation provided by a plugin for considering maps if a
# non-default tile store is configured in 'map.location'.
map.type = osm

# Maximum available/allowed tile level. The OSM servers typically serve map
# tiles up to level 19.
map.osm.maxLevel = 19

# Path of an optional cache directory. If specified downloaded tiles will we
# cached to speed up requests and to save network bandwidth.
map.osm.cacheDir = @DATADIR@/share/maps/cache

# Number of seconds a cached tile is valid. Cache files older than the
# specified number of seconds are reloaded from the tile server upon request.
# Use a negative value to indicated an unlimited cache duration.
map.osm.cacheDuration = 8640000

# SeisComP ships with the rectangular projection built-in. Other projections
# may be provided through plugins.
scheme.map.projection = Mercator

# Configure the columns of the event list that are visible initially. The first
# column containing the origin time is always visible and cannot be hidden.
# Possible values are:
# TimeAgo, Certainty, Type, M, MType, RMS, AzGap, Phases, Lat, Lon, Depth,
# DType, Stat, FM, Origins, Agency, Author, Region, ID.
# Custom columns can be added by eventlist.customColumn.* or
# eventlist.scripts.* parameters.
eventlist.visibleColumns = M, MType, Type, Phases, RMS, Lat, Lon, Depth, Stat, Agency, Region, ID

# Name of the custom column to be shown in the column header.
eventlist.customColumn.name = Operator

# ID of the event comment to look up.
# originCommentID, if configured, takes priority.
eventlist.customColumn.eventCommentID = operator

# Position of the column. If the configured position is less than 0 or if it
# exceeds the total number of columns, then the column is appended to the right.
eventlist.customColumn.pos = 1
